{"version":3,"sources":["webpack:///./src/components/avatar.js","webpack:///./src/components/pull_requests.js","webpack:///./src/pages/pull_requests.js"],"names":["Avatar","img","style","width","height","display","position","overflow","fontSize","alignItems","flexShrink","userSelect","borderRadius","justifyContent","href","src","alt","textAlign","objectFit","margin","orgBlacklist","PullRequestHeader","pull_request","iconType","GitMerge","iconColor","merged","closed","GitPullRequest","marginBottom","url","target","rel","title","color","icon","FooterItem","children","marginRight","PullRequestFooter","language","baseRepository","languages","edges","length","node","createdTimeAgo","Date","createdAt","createdDaysAgo","Math","floor","slice","Intl","RelativeTimeFormat","format","closedAt","closedTimeAgo","closedDaysAgo","undefined","top","backgroundColor","name","Repo","nameWithOwner","PullRequest","filter","blacklistItem","startsWith","borderBottom","padding","gitHubQuery","IndexPage","data","githubData","viewer","avatarUrl","pullRequests","maxWidth","border","nodes","map","pullrequest","key","reverse"],"mappings":"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","file":"component---src-pages-pull-requests-js-2c34f4507a0a3fbb70a1.js","sourcesContent":["import React from \"react\";\n\nconst Avatar = ({ img }) => {\n  return (\n    <div\n      style={{\n        width: 125,\n        height: 125,\n        display: \"flex\",\n        position: \"relative\",\n        overflow: \"hidden\",\n        fontSize: \"1.25rem\",\n        alignItems: \"center\",\n        flexShrink: 0,\n        userSelect: \"none\",\n        borderRadius: \"50%\",\n        justifyContent: \"center\"\n      }}\n    >\n    <a href=\"https://www.github.com/jmoney8080\">\n      <img\n        src={img}\n        alt=\"avatar\"\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          textAlign: \"center\",\n          objectFit: \"cover\",\n          margin: 0\n        }}\n      />\n    </a>\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\"\nimport Octicon, { GitMerge, GitPullRequest, Repo } from \"@primer/octicons-react\"\n\nconst orgBlacklist = [\"jmoney8080\", \"boxen\"]\n\nconst PullRequestHeader = ({ pull_request }) => {\n    let iconType = GitMerge\n    let iconColor = \"#6f42c1\"\n    if (pull_request.merged === false && pull_request.closed === true) {\n        iconType = GitPullRequest\n        iconColor = \"#cb2431\"\n    } else if (pull_request.closed === false) {\n        iconColor = \"#28a745\"\n    }\n    return (\n        <div\n            style={{ display: `flex`, justifyContent: `space-between`, fontSize: 14 }}\n        >\n        <h3\n            style={{\n                display: `flex`,\n                justifyContent: `space-between`,\n                marginBottom: 0,\n                fontSize: 20,\n            }}\n        >\n            <a\n                href={pull_request.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n            {pull_request.title}\n            </a>\n        </h3>\n        <span style={{ color: iconColor }}><Octicon icon={iconType} width={36} height={30}/></span>\n        </div>\n    )\n}\n\nconst FooterItem = ({ children }) => (\n  <span style={{ marginRight: 16 }}>{children}</span>\n)\n\nconst PullRequestFooter = ({ pull_request }) => {\n\n    let language = {}\n    if (pull_request.baseRepository.languages.edges.length > 0) {\n        language = pull_request.baseRepository.languages.edges[0].node\n    }\n\n    if (language.color === null) {\n        language.color = \"purple\"\n    }\n\n    const createdTimeAgo = new Date(pull_request.createdAt) - new Date()\n    const createdDaysAgo = Math.floor(createdTimeAgo / (1000 * 60 * 60 * 24)) // ms to days\n    let createdAt = pull_request.createdAt.slice(0, 10)\n  \n    if (createdDaysAgo > -21) {\n        createdAt = new Intl.RelativeTimeFormat(\"en\", { style: \"narrow\" }).format(\n            createdDaysAgo,\n        \"day\"\n      )\n    }\n\n    let closedAt = null\n    if (pull_request.closedAt !== null) {\n        const closedTimeAgo = new Date(pull_request.closedAt) - new Date()\n        const closedDaysAgo = Math.floor(closedTimeAgo / (1000 * 60 * 60 * 24)) // ms to days\n        closedAt = pull_request.closedAt.slice(0, 10)\n    \n        if (closedDaysAgo > -21) {\n            closedAt = new Intl.RelativeTimeFormat(\"en\", { style: \"narrow\" }).format(\n                closedDaysAgo,\n                \"day\"\n            )\n        }\n    }\n\n    return (\n        <div style={{ fontSize: 12 }}>\n            {language !== undefined && (<FooterItem>\n                <span\n                    style={{\n                        borderRadius: `50%`,\n                        display: `inline-block`,\n                        height: 12,\n                        position: `relative`,\n                        top: 1,\n                        width: 12,\n                        backgroundColor: language.color,\n                    }}\n                />{\" \"}\n                {language.name}\n            </FooterItem>)}\n            <FooterItem>\n                <Octicon icon={Repo}/>{\" \"}<a href={pull_request.baseRepository.url}>{pull_request.baseRepository.nameWithOwner}</a>\n            </FooterItem>\n            <FooterItem>Created: {createdAt}</FooterItem>\n            {closedAt && <FooterItem>Closed: {closedAt}</FooterItem>}\n        </div>\n    )\n}\n\nconst PullRequest = ({ pull_request }) => {\n    const blacklistMatches = orgBlacklist.filter( blacklistItem => {\n             return pull_request.baseRepository.nameWithOwner.startsWith(blacklistItem)\n        } \n    )\n\n    if (blacklistMatches.length >= 1) {\n        return (\n            <div/>\n        )\n    }\n\n    return (\n        <div\n            style={{\n            borderBottom: `1px solid #e1e4e8`,\n            marginBottom: `1rem`,\n            padding: `1rem`,\n            fontSize: 16,\n            }}\n        >\n            <PullRequestHeader pull_request={pull_request} />\n            <PullRequestFooter pull_request={pull_request} />\n        </div>\n    )\n}\n\nexport default PullRequest\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport Avatar from \"../components/avatar\";\nimport PullRequest from \"../components/pull_requests\";\n\nconst IndexPage = ({ data }) => {\n  const {\n    name,\n    avatarUrl,\n    pullRequests\n  } = data.githubData.data.viewer;\n\n  return (\n    <Layout>\n      <div style={{ maxWidth: `960px`, marginBottom: `1.45rem` }}>\n        <div\n          style={{\n            display: `flex`,\n            alignItems: `center`,\n            margin: `1.45rem 0`\n          }}\n        >\n          <Avatar img={avatarUrl} />\n          <div style={{ padding: 16 }}>\n            <h2 style={{ border: `none` }}>{name}</h2>\n          </div>\n        </div>\n        {pullRequests.nodes\n          .map(pullrequest => <PullRequest key={pullrequest.title} pull_request={pullrequest} />)\n          .reverse()}\n      </div>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const gitHubQuery = graphql`\n  {\n    githubData {\n      data {\n        viewer {\n          name\n          avatarUrl\n          isHireable\n          pullRequests {\n              nodes {\n                  title\n                  url\n                  closed\n                  merged\n                  createdAt\n                  closedAt\n                  baseRepository {\n                    name\n                    openGraphImageUrl\n                    nameWithOwner\n                    url\n                    languages {\n                        edges {\n                            node {\n                                name\n                                color\n                            }\n                        }\n                    }\n                  }\n              }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}