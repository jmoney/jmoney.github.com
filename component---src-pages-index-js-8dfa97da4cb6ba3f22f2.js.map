{"version":3,"sources":["webpack:///./src/components/avatar.js","webpack:///./src/components/devto.js","webpack:///./src/pages/index.js"],"names":["Avatar","img","style","width","height","display","position","overflow","fontSize","alignItems","flexShrink","userSelect","borderRadius","justifyContent","href","src","alt","textAlign","objectFit","margin","DevToHeader","devto","marginBottom","node","article","url","target","rel","title","DevToDescription","color","description","DevTo","borderBottom","padding","Template","data","markdownRemark","frontmatter","html","maxWidth","githubData","viewer","avatarUrl","border","name","dangerouslySetInnerHTML","__html","allDevArticles","edges","map","reverse"],"mappings":"2FAAA,yBAoCeA,IAlCA,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAChB,OACE,yBACEC,MAAO,CACLC,MAAO,IACPC,OAAQ,IACRC,QAAS,OACTC,SAAU,WACVC,SAAU,SACVC,SAAU,UACVC,WAAY,SACZC,WAAY,EACZC,WAAY,OACZC,aAAc,MACdC,eAAgB,WAGpB,uBAAGC,KAAK,qCACN,yBACEC,IAAKd,EACLe,IAAI,SACJd,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRa,UAAW,SACXC,UAAW,QACXC,OAAQ,S,kIC1BZC,EAAc,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrB,OACE,yBACEnB,MAAO,CAAEG,QAAQ,OAASQ,eAAe,gBAAkBL,SAAU,KAErE,wBACEN,MAAO,CACLG,QAAQ,OACRQ,eAAe,gBACfS,aAAc,EACdd,SAAU,KAGR,uBACIM,KAAI,GAAKO,EAAME,KAAKC,QAAQC,IAC5BC,OAAO,SACPC,IAAI,uBAEHN,EAAME,KAAKC,QAAQI,UAO9BC,EAAmB,SAAC,GAAD,IAAGR,EAAH,EAAGA,MAAH,OACrB,yBAAKnB,MAAO,CAAEC,MAAM,QAClB,uBAAGD,MAAO,CAAE4B,MAAM,UAAYR,aAAc,IACzCD,EAAME,KAAKC,QAAQO,eAqBbC,EAhBD,SAAC,GAAe,IAAbX,EAAY,EAAZA,MACb,OACI,yBACInB,MAAO,CACP+B,aAAa,oBACbX,aAAa,OACbY,QAAQ,OACR1B,SAAU,KAGV,kBAAC,EAAD,CAAaa,MAAOA,IACpB,kBAAC,EAAD,CAAkBA,MAAOA,MCxCtB,SAASc,EAAT,GAEX,IADFC,EACC,EADDA,KAEQC,EAAmBD,EAAnBC,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACrB,OACE,kBAAC,IAAD,KACI,yBAAKrC,MAAO,CAAEsC,SAAS,QAAUlB,aAAa,YAC1C,yBACIpB,MAAO,CACPG,QAAQ,OACRI,WAAW,SACXU,OAAO,cAGP,kBAAC,IAAD,CAAQlB,IAAKmC,EAAKK,WAAWL,KAAKM,OAAOC,YACzC,yBAAKzC,MAAO,CAAEgC,QAAS,KACvB,wBAAIhC,MAAO,CAAE0C,OAAO,SAAYR,EAAKK,WAAWL,KAAKM,OAAOG,QAGhE,yBACI3C,MAAO,CACC+B,aAAa,oBACbX,aAAa,OACbY,QAAQ,OACR1B,SAAU,KAGlB,4BAAK8B,EAAYV,OACjB,yBACAkB,wBAAyB,CAAEC,OAAQR,MAGvC,qCACCH,EAAKY,eAAeC,MAChBC,KAAI,SAAA7B,GAAK,OAAI,kBAAC,EAAD,CAAOA,MAAOA,OAC3B8B","file":"component---src-pages-index-js-8dfa97da4cb6ba3f22f2.js","sourcesContent":["import React from \"react\";\n\nconst Avatar = ({ img }) => {\n  return (\n    <div\n      style={{\n        width: 125,\n        height: 125,\n        display: \"flex\",\n        position: \"relative\",\n        overflow: \"hidden\",\n        fontSize: \"1.25rem\",\n        alignItems: \"center\",\n        flexShrink: 0,\n        userSelect: \"none\",\n        borderRadius: \"50%\",\n        justifyContent: \"center\"\n      }}\n    >\n    <a href=\"https://www.github.com/jmoney8080\">\n      <img\n        src={img}\n        alt=\"avatar\"\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          textAlign: \"center\",\n          objectFit: \"cover\",\n          margin: 0\n        }}\n      />\n    </a>\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\"\n\nconst DevToHeader = ({ devto }) => {\n  return (\n    <div\n      style={{ display: `flex`, justifyContent: `space-between`, fontSize: 14 }}\n    >\n      <h3\n        style={{\n          display: `flex`,\n          justifyContent: `space-between`,\n          marginBottom: 0,\n          fontSize: 20,\n        }}\n      >\n            <a\n                href={`${devto.node.article.url}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                {devto.node.article.title}\n            </a>\n        </h3>\n    </div>\n  )\n}\n\nconst DevToDescription = ({ devto }) => (\n    <div style={{ width: `75%` }}>\n      <p style={{ color: `#586069`, marginBottom: 0 }}>\n        {devto.node.article.description}\n      </p>\n    </div>\n  )\n\nconst DevTo = ({ devto }) => {\n    return (\n        <div\n            style={{\n            borderBottom: `1px solid #e1e4e8`,\n            marginBottom: `1rem`,\n            padding: `1rem`,\n            fontSize: 16,\n            }}\n        >\n            <DevToHeader devto={devto} />\n            <DevToDescription devto={devto} />\n        </div>\n    )\n}\n\nexport default DevTo\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\";\nimport Avatar from \"../components/avatar\";\nimport DevTo from \"../components/devto\";\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Layout>\n        <div style={{ maxWidth: `960px`, marginBottom: `1.45rem` }}>\n            <div\n                style={{\n                display: `flex`,\n                alignItems: `center`,\n                margin: `1.45rem 0`\n                }}\n            >\n                <Avatar img={data.githubData.data.viewer.avatarUrl} />\n                <div style={{ padding: 16 }}>\n                <h2 style={{ border: `none` }}>{data.githubData.data.viewer.name}</h2>\n                </div>\n            </div>\n            <div\n                style={{\n                        borderBottom: `1px solid #e1e4e8`,\n                        marginBottom: `1rem`,\n                        padding: `1rem`,\n                        fontSize: 16,\n                        }}\n                    >\n                <h1>{frontmatter.title}</h1>\n                <div\n                dangerouslySetInnerHTML={{ __html: html }}\n                />\n            </div>\n            <h2>Blogs</h2>\n            {data.allDevArticles.edges\n                .map(devto => <DevTo devto={devto}/>)\n                .reverse()\n            }\n        </div>\n    </Layout>\n\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    githubData {\n      data {\n        viewer {\n          name\n          avatarUrl\n        }\n      }\n    }\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        path\n        title\n      }\n    }\n    allDevArticles {\n        edges {\n            node {\n                article {\n                    id\n                    title\n                    description\n                    url\n                }\n            }\n        }\n    }\n  }`"],"sourceRoot":""}